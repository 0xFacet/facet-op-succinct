# syntax=docker/dockerfile:1.4

# Base stage: Install Rust and dependencies
FROM ubuntu:24.04 AS rust-base

WORKDIR /usr/src/app

# Install required dependencies
RUN apt-get update && apt-get install -y \
    curl \
    clang \
    build-essential \
    git \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH=/root/.cargo/bin:$PATH
RUN rustup install stable && rustup default stable

# Skip SP1 installation - not needed for runtime since ELFs are pre-built

# Build stage
FROM rust-base AS builder

# Copy the entire workspace
COPY . .

# Build the proposer binary
RUN cargo build --release -p op-succinct-fp --bin challenger
# Runtime stage (minimal image)
FROM ubuntu:24.04

WORKDIR /app

# Install only necessary runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH=/root/.cargo/bin:$PATH
RUN rustup install stable && rustup default stable
    
# Copy the built proposer binary
COPY --from=builder /usr/src/app/target/release/proposer /usr/local/bin/

# Set the command
CMD ["proposer"]
